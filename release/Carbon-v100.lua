--[[
            Carbon v1.0.0
           Made by IliasHDZ

    NOTE: This is a minified version for the release.
    Goto https://github.com/iliasHDZ/Carbon for the readable (latest) version.
]]
local a={update={type="event",list={}},render={type="event",list={}},exit={type="event",list={}},stop={type="function"}}local function b(c,...)if c.type=="event"then for d=1,#c.list do c.list[d](...)end end end;local e=true;local f,g=term.getSize()local h=error;error=function(...)e=false;return h(...)end;a.stop.call=function()e=false end;local i=window.create(term.current(),1,1,f,g,false)local j={clear=function(k)if k then i.setBackgroundColor(k)end;i.clear()end,setCur=function(l,m)i.setCursorPos(l,m)end,setBG=function(k)i.setBackgroundColor(k)end,setTXT=function(k)i.setTextColor(k)end,rect=function(l,m,n,o,k)i.setBackgroundColor(k)for d=1,o do i.setCursorPos(l,m+d-1)i.write(string.rep(" ",n))end end,clipWrite=function(p,q,r,s)local t,u=i.getCursorPos()for d=1,#r do local l,m=i.getCursorPos()l,m=l-1,m-1;if l>=math.floor(p.X)and m>=math.floor(p.Y)and l<math.floor(p.X+q.X)and m<math.floor(p.Y+q.Y)then i.write(r:sub(d,d))else i.setCursorPos(l+2,m+1)end;if r:sub(d,d)=="\n"and s then u=u+1;i.setCursorPos(t,u)end end end,swapBuffers=function()i.setVisible(true)i.setVisible(false)end,write=i.write}local v;local w={__index=function(x,d)if a[d]==nil then error("attempt to index a nil value (field '"..d.."')")else if getmetatable(a[d])==v then return a[d]end;if a[d].type=="event"then return function(y)if type(y)=="function"then table.insert(a[d].list,y)else error("argument #1: function expected (got '"..type(y).."')")end end elseif a[d].type=="function"then return a[d].call end end end,__newindex=function(x,d,z)error("attempt to change value of '"..d.."' (not possible)")end}Uiv2={}Uiv2={__meta={__add=function(x,z)if type(z)=="table"and getmetatable(z)==Uiv2.__meta then x.X.Scale=x.X.Scale+z.X.Scale;x.X.Offset=x.X.Offset+z.X.Offset;x.Y.Scale=x.Y.Scale+z.Y.Scale;x.Y.Offset=x.Y.Offset+z.Y.Offset;return x else error("(+) operator: Uiv2 expected, got '"..type(z).."'.")end end,__sub=function(x,z)if type(z)=="table"and getmetatable(z)==Uiv2.__meta then x.X.Scale=x.X.Scale-z.X.Scale;x.X.Offset=x.X.Offset-z.X.Offset;x.Y.Scale=x.Y.Scale-z.Y.Scale;x.Y.Offset=x.Y.Offset-z.Y.Offset;return x else error("(-) operator: Uiv2 expected, got '"..type(z).."'.")end end,__type="uiv2"},new=function(A,B,C,D)local new={}new.X,new.Y={},{}new.X.Scale,new.X.Offset=A,B;new.Y.Scale,new.Y.Offset=C,D;setmetatable(new,Uiv2.__meta)return new end,scale=function(A,C)return Uiv2.new(A,0,C,0)end,offset=function(B,D)return Uiv2.new(0,B,0,D)end}Vec2={}Vec2={__meta={__add=function(x,z)if type(z)=="table"and getmetatable(z)==Vec2.__meta then x.X=x.X+z.X;x.Y=x.Y+z.Y;return x else error("(+) operator: Vec2 expected, got '"..type(z).."'.")end end,__sub=function(x,z)if type(z)=="table"and getmetatable(z)==Vec2.__meta then x.X=x.X-z.X;x.Y=x.Y-z.Y;return x else error("(-) operator: Vec2 expected, got '"..type(z).."'.")end end,__type="vec2"},new=function(l,m)local new={}new.X,new.Y=l,m;new.__type="vec2"setmetatable(new,Vec2.__meta)return new end}local E,F,G;local function H(l,m,k)E=l;F=m;G=k end;local I;local J={RShift=false,LShift=false,RCtrl=false,LCtrl=false}function subStr(K,L,M)local N=""for d=L,M-1 do N=N..K:sub(d,d)end;return N end;local O={["Instance"]={inh=nil,abstract=true,prp={Name={acc=true,type="string",def="Instance"},ClassName={acc=false,type="string",def="Instance"},Parent={acc=true,type="obj",def=nil},GetChildren={acc=false,type="function",def=function(self)return self.__UNTOUCHABLE.Children end},Destroy={acc=false,type="function",def=function(self)if self.Parent~=nil then self.Parent.__UNTOUCHABLE.Children[self.__INDEXINGID]=nil;for d=self.__INDEXINGID+1,#self.Parent.__UNTOUCHABLE.Children do self.Parent.__UNTOUCHABLE.Children[d].__INDEXINGID=d-1;self.Parent.__UNTOUCHABLE.Children[d-1]=self.Parent.__UNTOUCHABLE.Children[d]self.Parent.__UNTOUCHABLE.Children[d]=nil end end end}}},["UIElement"]={inh="Instance",abstract=true,prp={Position={acc=true,type="uiv2",def=Uiv2.new(0,0,0,0)},AbsolutePosition={acc=false,type="uiv2",def=function(P)return I(P,0)end},Size={acc=true,type="uiv2",def=Uiv2.new(0,0,0,0)},AbsoluteSize={acc=false,type="uiv2",def=function(P)return I(P,1)end}}},["Main"]={inh="UIElement",abstract=true,update=function(P,Q)end,render=function(P)j.clear(P.BackgroundColor)end,prp={BackgroundColor={acc=true,type="number",def=colors.white}}},["TextLabel"]={inh="UIElement",abstract=false,update=function(P,Q)end,render=function(P)local R=P.AbsolutePosition;local S=P.AbsoluteSize;j.rect(R.X+1,R.Y+1,S.X,S.Y,P.BackgroundColor)j.setCur(R.X+1,R.Y+1)j.setTXT(P.TextColor)j.clipWrite(R,S,P.Text,true)end,prp={Size={acc=true,type="uiv2",def=Uiv2.new(0,20,0,2)},BackgroundColor={acc=true,type="number",def=colors.white},TextColor={acc=true,type="number",def=colors.black},Text={acc=true,type="string",def="Label"}}},["TextButton"]={inh="UIElement",abstract=false,update=function(P,Q)local q;if P.Size==nil then P.Size=Uiv2.new(0,#P.Text+2,0,1)q=P.AbsoluteSize;P.__UNTOUCHABLE.Size=nil else q=P.AbsoluteSize end;local p=P.AbsolutePosition;if Q[1]=="mouse_click"then local L,l,m=Q[2],Q[3]-1,Q[4]-1;P.__UNTOUCHABLE.Clicked=false;if l>=math.floor(p.X)and m>=math.floor(p.Y)and l<math.floor(p.X+q.X)and m<math.floor(p.Y+q.Y)then P.__UNTOUCHABLE.Clicked=true;for d=1,#P.__UNTOUCHABLE.OnPress do P.__UNTOUCHABLE.OnPress[d]()end end elseif Q[1]=="mouse_up"then local L,l,m=Q[2],Q[3]-1,Q[4]-1;if P.Clicked then P.__UNTOUCHABLE.Clicked=false;if l>=math.floor(p.X)and m>=math.floor(p.Y)and l<math.floor(p.X+q.X)and m<math.floor(p.Y+q.Y)then for d=1,#P.__UNTOUCHABLE.OnClick do P.__UNTOUCHABLE.OnClick[d]()end end end end end,render=function(P)local S;if P.Size==nil then P.Size=Uiv2.new(0,#P.Text+2,0,1)S=P.AbsoluteSize;P.__UNTOUCHABLE.Size=nil else S=P.AbsoluteSize end;local R=P.AbsolutePosition;local T,U=P.TextColor,P.BackgroundColor;if P.Clicked then T,U=P.ClickTextColor,P.ClickBackgroundColor end;j.rect(R.X+1,R.Y+1,S.X,S.Y,U)j.setCur(R.X+2,R.Y+1)j.setTXT(T)j.clipWrite(R,S,P.Text,false)end,prp={Size={acc=true,type="uiv2",def=nil},BackgroundColor={acc=true,type="number",def=colors.lightGray},TextColor={acc=true,type="number",def=colors.black},ClickBackgroundColor={acc=true,type="number",def=colors.blue},ClickTextColor={acc=true,type="number",def=colors.white},Clicked={acc=false,type="boolean",def=false},Text={acc=true,type="string",def="Button"},OnClick={acc=false,type="event",def={}},OnPress={acc=false,type="event",def={}}}},["Frame"]={inh="UIElement",abstract=false,update=function(P,Q)end,render=function(P)local R=P.AbsolutePosition;local S=P.AbsoluteSize;j.rect(R.X+1,R.Y+1,S.X,S.Y,P.BackgroundColor)j.setTXT(colors.black)end,prp={BackgroundColor={acc=true,type="number",def=colors.lightGray}}},["TextBox"]={inh="UIElement",abstract=false,update=function(P,Q)local R=P.AbsolutePosition;local S=P.AbsoluteSize;S.Y=1;if Q[1]=="mouse_click"then local L,l,m=Q[2],Q[3]-1,Q[4]-1;if l>=math.floor(R.X)and m>=math.floor(R.Y)and l<math.floor(R.X+S.X)and m<math.floor(R.Y+S.Y)then P.__UNTOUCHABLE.Selected=true;P.__UNTOUCHABLE.Cursor=math.floor(l-R.X+1+P.Scroll)else P.__UNTOUCHABLE.Selected=false;P.__UNTOUCHABLE.Cursor=nil;P.__UNTOUCHABLE.Scroll=0 end;if P.Selection then P.__UNTOUCHABLE.Selection=false;P.__UNTOUCHABLE.SelectionBegin=0;P.__UNTOUCHABLE.SelectionEnd=0 end elseif Q[1]=="mouse_drag"then local L,l,m=Q[2],Q[3]-1,Q[4]-1;if P.Selected then if not P.Selection then P.__UNTOUCHABLE.SelectionBegin=P.Cursor;P.__UNTOUCHABLE.Selection=true end;P.__UNTOUCHABLE.SelectionEnd=math.floor(l-R.X+1+P.Scroll)P.__UNTOUCHABLE.Cursor=math.floor(l-R.X+1+P.Scroll)end elseif Q[1]=="char"then if P.Selected and not(J.RCtrl or J.LCtrl)then local V;if P.Selection then V=P.__UNTOUCHABLE.Text;P.__UNTOUCHABLE.Text=""local W,X=P.SelectionBegin,P.SelectionEnd;if P.SelectionBegin>P.SelectionEnd then X,W=P.SelectionBegin,P.SelectionEnd end;for d=1,#V do if not(d-1>=W and d-1<X)then P.__UNTOUCHABLE.Text=P.__UNTOUCHABLE.Text..V:sub(d,d)end end;P.__UNTOUCHABLE.Selection=false;P.__UNTOUCHABLE.SelectionBegin=0;P.__UNTOUCHABLE.SelectionEnd=0;P.__UNTOUCHABLE.Cursor=W end;V=P.__UNTOUCHABLE.Text;P.__UNTOUCHABLE.Text=subStr(V,1,P.__UNTOUCHABLE.Cursor+1)..Q[2]..subStr(V,P.__UNTOUCHABLE.Cursor+1,#P.Text+1)if#V==0 then P.__UNTOUCHABLE.Text=Q[2]end;P.__UNTOUCHABLE.Cursor=P.__UNTOUCHABLE.Cursor+1 end elseif Q[1]=="key"then if P.Selected then if Q[2]==keys.left then local Y=P.__UNTOUCHABLE.Cursor;P.__UNTOUCHABLE.Cursor=P.__UNTOUCHABLE.Cursor-1;if J.RShift or J.LShift then if P.Selection then P.__UNTOUCHABLE.SelectionEnd=P.__UNTOUCHABLE.Cursor else P.__UNTOUCHABLE.SelectionBegin=Y;P.__UNTOUCHABLE.SelectionEnd=P.__UNTOUCHABLE.Cursor;P.__UNTOUCHABLE.Selection=true end elseif P.Selection then P.__UNTOUCHABLE.Selection=false;P.__UNTOUCHABLE.SelectionBegin=0;P.__UNTOUCHABLE.SelectionEnd=0;P.__UNTOUCHABLE.Cursor=Y end elseif Q[2]==keys.right then local Y=P.__UNTOUCHABLE.Cursor;P.__UNTOUCHABLE.Cursor=P.__UNTOUCHABLE.Cursor+1;if J.RShift or J.LShift then if P.Selection then P.__UNTOUCHABLE.SelectionEnd=P.__UNTOUCHABLE.Cursor else P.__UNTOUCHABLE.SelectionBegin=Y;P.__UNTOUCHABLE.SelectionEnd=P.__UNTOUCHABLE.Cursor;P.__UNTOUCHABLE.Selection=true end elseif P.Selection then P.__UNTOUCHABLE.Selection=false;P.__UNTOUCHABLE.SelectionBegin=0;P.__UNTOUCHABLE.SelectionEnd=0;P.__UNTOUCHABLE.Cursor=Y end elseif Q[2]==keys.backspace then if P.__UNTOUCHABLE.Cursor~=0 and not P.Selection then local V=P.__UNTOUCHABLE.Text;P.__UNTOUCHABLE.Text=""for d=1,#V do if d~=P.__UNTOUCHABLE.Cursor then P.__UNTOUCHABLE.Text=P.__UNTOUCHABLE.Text..V:sub(d,d)end end;P.__UNTOUCHABLE.Cursor=P.__UNTOUCHABLE.Cursor-1 end;if P.Selection then local V=P.__UNTOUCHABLE.Text;P.__UNTOUCHABLE.Text=""local W,X=P.SelectionBegin,P.SelectionEnd;if P.SelectionBegin>P.SelectionEnd then X,W=P.SelectionBegin,P.SelectionEnd end;for d=1,#V do if not(d-1>=W and d-1<X)then P.__UNTOUCHABLE.Text=P.__UNTOUCHABLE.Text..V:sub(d,d)end end;P.__UNTOUCHABLE.Selection=false;P.__UNTOUCHABLE.SelectionBegin=0;P.__UNTOUCHABLE.SelectionEnd=0;P.__UNTOUCHABLE.Cursor=W end elseif Q[2]==keys.enter then P.__UNTOUCHABLE.Selected=false;P.__UNTOUCHABLE.Cursor=nil;P.__UNTOUCHABLE.Scroll=0 elseif Q[2]==keys.a then if J.RCtrl or J.LCtrl then if not P.Selection then P.__UNTOUCHABLE.Selection=true end;P.__UNTOUCHABLE.Cursor=#P.Text;P.__UNTOUCHABLE.SelectionBegin=0;P.__UNTOUCHABLE.SelectionEnd=#P.Text end end end elseif Q[1]=="paste"then if P.Selected then local V;if P.Selection then V=P.__UNTOUCHABLE.Text;P.__UNTOUCHABLE.Text=""local W,X=P.SelectionBegin,P.SelectionEnd;if P.SelectionBegin>P.SelectionEnd then X,W=P.SelectionBegin,P.SelectionEnd end;for d=1,#V do if not(d-1>=W and d-1<X)then P.__UNTOUCHABLE.Text=P.__UNTOUCHABLE.Text..V:sub(d,d)end end;P.__UNTOUCHABLE.Selection=false;P.__UNTOUCHABLE.SelectionBegin=0;P.__UNTOUCHABLE.SelectionEnd=0;P.__UNTOUCHABLE.Cursor=W end;V=P.__UNTOUCHABLE.Text;P.__UNTOUCHABLE.Text=subStr(V,1,P.__UNTOUCHABLE.Cursor+1)..Q[2]..subStr(V,P.__UNTOUCHABLE.Cursor+1,#P.Text+1)if#V==0 then P.__UNTOUCHABLE.Text=Q[2]end;P.__UNTOUCHABLE.Cursor=P.__UNTOUCHABLE.Cursor+#Q[2]end end;if P.Selection and P.SelectionBegin==P.SelectionEnd then P.__UNTOUCHABLE.Selection=false;P.__UNTOUCHABLE.SelectionBegin=0;P.__UNTOUCHABLE.SelectionEnd=0 end;if P.Selection then P.__UNTOUCHABLE.SelectionBegin=math.min(math.max(P.SelectionBegin,0),#P.Text)P.__UNTOUCHABLE.SelectionEnd=math.min(math.max(P.SelectionEnd,0),#P.Text)end;if P.Selected then P.__UNTOUCHABLE.Cursor=math.min(math.max(P.__UNTOUCHABLE.Cursor,0),#P.Text)if P.Cursor-P.Scroll>=S.X then P.__UNTOUCHABLE.Scroll=P.Scroll+P.Cursor-P.Scroll-(S.X-1)elseif P.Cursor-P.Scroll<0 then P.__UNTOUCHABLE.Scroll=P.Scroll+P.Cursor-P.Scroll end end end,render=function(P)local R=P.AbsolutePosition;local S=P.AbsoluteSize;S.Y=1;if P.Selected then j.rect(R.X+1,R.Y+1,S.X,S.Y,P.SelectedBackgroundColor)j.setCur(R.X+1-P.Scroll,R.Y+1)j.setTXT(P.SelectedTextColor)H(R.X+P.Cursor+1-P.Scroll,R.Y+1,P.SelectedTextColor)else j.rect(R.X+1,R.Y+1,S.X,S.Y,P.BackgroundColor)j.setCur(R.X+1-P.Scroll,R.Y+1)j.setTXT(P.TextColor)end;if P.Selection then local t,u=i.getCursorPos()for d=1,#P.Text do local Z,_=i.getCursorPos()Z,_=Z-1,_-1;local W,X=P.SelectionBegin,P.SelectionEnd;if P.SelectionBegin>P.SelectionEnd then X,W=P.SelectionBegin,P.SelectionEnd end;if d-1>=W and d-1<X then j.setBG(P.SelectionBackgroundColor)j.setTXT(P.SelectionTextColor)else j.setBG(P.SelectedBackgroundColor)j.setTXT(P.SelectedTextColor)end;if Z>=math.floor(R.X)and _>=math.floor(R.Y)and Z<math.floor(R.X+S.X)and _<math.floor(R.Y+S.Y)then i.write(P.Text:sub(d,d))else i.setCursorPos(Z+2,_+1)end end else j.clipWrite(R,S,P.Text,false)end end,prp={BackgroundColor={acc=true,type="number",def=colors.lightGray},TextColor={acc=true,type="number",def=colors.gray},SelectedBackgroundColor={acc=true,type="number",def=colors.lightGray},SelectedTextColor={acc=true,type="number",def=colors.black},Size={acc=true,type="uiv2",def=Uiv2.new(0,15,0,1)},Text={acc=true,type="string",def="Text Value"},Selected={acc=true,type="boolean",def=false},Cursor={acc=false,type="number",def=nil},Scroll={acc=false,type="number",def=0},Selection={acc=false,type="boolean",def=false},SelectionBegin={acc=false,type="number",def=0},SelectionEnd={acc=false,type="number",def=0},SelectionBackgroundColor={acc=false,type="number",def=colors.lightBlue},SelectionTextColor={acc=false,type="number",def=colors.white}}},["Checkbox"]={inh="UIElement",abstract=false,update=function(P,Q)local q=P.AbsoluteSize;local p=P.AbsolutePosition;if Q[1]=="mouse_click"then local L,l,m=Q[2],Q[3]-1,Q[4]-1;P.__UNTOUCHABLE.Clicked=false;if l>=math.floor(p.X)and m>=math.floor(p.Y)and l<math.floor(p.X+q.X)and m<math.floor(p.Y+q.Y)then P.__UNTOUCHABLE.Clicked=true;for d=1,#P.__UNTOUCHABLE.OnPress do P.__UNTOUCHABLE.OnPress[d]()end end elseif Q[1]=="mouse_up"then local L,l,m=Q[2],Q[3]-1,Q[4]-1;if P.Clicked then P.__UNTOUCHABLE.Clicked=false;if l>=math.floor(p.X)and m>=math.floor(p.Y)and l<math.floor(p.X+q.X)and m<math.floor(p.Y+q.Y)then if P.Checked then P.__UNTOUCHABLE.Checked=false else P.__UNTOUCHABLE.Checked=true end;for d=1,#P.__UNTOUCHABLE.OnClick do P.__UNTOUCHABLE.OnClick[d](P.__UNTOUCHABLE.Checked)end end end end end,render=function(P,Q)local S=P.AbsoluteSize;local R=P.AbsolutePosition;local T,U=P.TextColor,P.BackgroundColor;if P.Clicked then U=P.ClickBackgroundColor end;j.rect(R.X+1,R.Y+1,S.X,S.Y,U)j.setCur(R.X+1,R.Y+1)j.setTXT(T)if P.Checked then j.write(P.Check:sub(1,1))end end,prp={Size={acc=false,type="uiv2",def=Uiv2.new(0,1,0,1)},BackgroundColor={acc=true,type="number",def=colors.gray},ClickBackgroundColor={acc=true,type="number",def=colors.lightGray},TextColor={acc=true,type="number",def=colors.white},Check={acc=true,type="string",def="x"},Clicked={acc=true,type="boolean",def=false},Checked={acc=true,type="boolean",def=false},OnClick={acc=false,type="event",def={}},OnPress={acc=false,type="event",def={}}}}}local function a0(a1,a2)if a1==a2 then return true end;local a3=O[a1]if a3.inh~=nil then return a0(a3.inh,a2)else return false end end;I=function(P,type)local a4=O[P.ClassName]local a5=Vec2.new(0,0)if P.Parent~=nil and type~=1 then a5=I(P.Parent,type)end;if not a0(P.ClassName,"UIElement")then return a5 else local a6=Vec2.new(0,0)if P.Parent~=nil then a6=I(P.Parent,1)end;if type==0 then return a5+Vec2.new(a6.X*P.Position.X.Scale+P.Position.X.Offset,a6.Y*P.Position.Y.Scale+P.Position.Y.Offset)else return a5+Vec2.new(a6.X*P.Size.X.Scale+P.Size.X.Offset,a6.Y*P.Size.Y.Scale+P.Size.Y.Offset)end end end;local function a7(a8,a9)if O[a8].inh~=nil then local aa=a7(O[a8].inh,a9)if aa then return aa end end;local ab=O[a8].prp[a9]if ab then return ab end;return nil end;v={__index=function(ac,d)local aa=a7(ac.__UNTOUCHABLE.ClassName,d)if aa~=nil then if aa.type=="event"then return function(ad)if type(ad)=="function"then table.insert(ac.__UNTOUCHABLE[d],ad)else error("Function expected for event(, got "..type(ad)..").")end end elseif aa and d~="Children"then if type(ac.__UNTOUCHABLE[d])=="function"and aa.type~="function"then return ac.__UNTOUCHABLE[d](ac)else return ac.__UNTOUCHABLE[d]end else for ae,af in ipairs(ac.__UNTOUCHABLE.Children)do if af.__UNTOUCHABLE.Name==d then return af end end end end;error(d.." is not a valid member of "..ac.__UNTOUCHABLE.ClassName)end,__newindex=function(ac,d,af)local aa=a7(ac.__UNTOUCHABLE.ClassName,d)if aa and d~="Children"and d~="Parent"then if type(af)==aa.type or type(af)=="table"and getmetatable(af)~=nil and getmetatable(af).__type==aa.type then if aa.acc then ac.__UNTOUCHABLE[d]=af else error("Cannot change property "..d.." in "..ac.__UNTOUCHABLE.ClassName)return end else error("Invalid datatype for property "..d.." in "..ac.__UNTOUCHABLE.ClassName)return end elseif d=="Parent"then if type(af)=="table"and getmetatable(af)==v then ac.__INDEXINGID=#af.__UNTOUCHABLE.Children+1;af.__UNTOUCHABLE.Children[ac.__INDEXINGID]=ac;ac.__UNTOUCHABLE.Parent=af else error("Invalid datatype for property Parent in "..ac.__UNTOUCHABLE.ClassName)end end end,__type="obj"}local function ag(ah)local P={}if O[ah].inh~=nil then P=ag(O[ah].inh)else P.__INDEXINGID=0;P.__UNTOUCHABLE={}P.__UNTOUCHABLE.Children={}end;for ae,af in pairs(O[ah].prp)do P.__UNTOUCHABLE[ae]=af.def end;P.__UNTOUCHABLE.ClassName=ah;P.__UNTOUCHABLE.Name=ah;setmetatable(P,v)return P end;main=ag("Main")main.Size=Uiv2.new(0,f,0,g)new=function(ai)if type(ai)~="string"then error("argument #1: string expected (got '"..type(ai).."')")return end;if O[ai]==nil then error("ClassName '"..ai.."' does not exist.")return end;if O[ai].abstract then error("Cannot create instance of abstract ClassName '"..ai.."'.")return end;return ag(ai)end;local function aj(P)if a0(P.ClassName,"UIElement")then O[P.ClassName].render(P)end;for ae,af in ipairs(P:GetChildren())do aj(af)end end;local function ak(P,Q)if a0(P.ClassName,"UIElement")then O[P.ClassName].update(P,Q)end;for ae,af in ipairs(P:GetChildren())do ak(af,Q)end end;local function al()aj(main)b(a.render)j.swapBuffers()if E~=nil then term.setCursorPos(E,F)term.setTextColor(G)term.setCursorBlink(true)H()else term.setCursorBlink(false)end end;local function am(Q)if Q[1]=="key"then if Q[2]==keys.rightShift then J.RShift=true elseif Q[2]==keys.leftShift then J.LShift=true elseif Q[2]==keys.rightCtrl then J.RCtrl=true elseif Q[2]==keys.leftCtrl then J.LCtrl=true end elseif Q[1]=="key_up"then if Q[2]==keys.rightShift then J.RShift=false elseif Q[2]==keys.leftShift then J.LShift=false elseif Q[2]==keys.rightCtrl then J.RCtrl=false elseif Q[2]==keys.leftCtrl then J.LCtrl=false end end;ak(main,Q)b(a.update,table.unpack(Q))end;function run()local Q={"start"}while e do am(Q)al()Q=table.pack(os.pullEventRaw())end;term.setBackgroundColor(colors.black)term.setTextColor(colors.white)term.clear()term.setCursorPos(1,1)b(a.exit)end;function Initialize(an)local ao={"Uiv2","Vec2"}an["c"]=an["Carbon"]an["Carbon"]=nil;for d=1,#ao do an[ao[d]]=an["c"][ao[d]]an["c"][ao[d]]=nil end;setmetatable(an["c"],w)return an end
